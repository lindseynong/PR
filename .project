<?xml version="1.0" encoding="UTF-8"?>
<projectDescription>
	<name>SEProjectN</name>
	<comment>
	═════════════════════════════════════════════════════════════════════════
	  SEProjectN: Eclipse Hyperproject vX

	  ☁️ Cloud-native  | 🤖 AI-assisted  | 🧪 Test-oriented | ⚙️ DevOps-Ready  
	  🔐 Secure        | 🗃 Modular       | 📈 Observable     | 🛰️ Self-healing

	  Version: X.0.∞-meta | Maintainer: You, the fearless Eclipse hacker 💻
	═════════════════════════════════════════════════════════════════════════
	</comment>

	<!-- NOTE: This project uses future-facing features. Plugins may need updating. -->
	<!-- TODO: Add support for live AI pair programming via WebSocket LLM bridge -->
	<!-- DOCGEN: This config is auto-readable by bots for automated diagram generation -->

	<projects>
		<project>ExternalLibrary</project>
		<project>SharedResources</project>
		<project>CoreServices</project>
		<project>TeamUtils</project>
		<project>AnalyticsModule</project>
		<project>DeploymentScripts</project>
		<project>MonitoringServices</project>
		<project>LegacyAdapter</project>
		<project>ThirdPartyIntegrations</project>
		<project>DesignSystemKit</project>
		<project>AIAssistModules</project>
		<project>LLMOptimizers</project>
	</projects>

	<buildSpec>
		<buildCommand>
			<name>org.eclipse.jdt.core.javabuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.m2e.core.maven2Builder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.validation.validationbuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.jdt.junit.JUnitBuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.eclemma.core.instrumentationbuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>net.sf.eclipsecs.core.CheckstyleBuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>net.sourceforge.pmd.eclipse.plugin.builder.PMDBuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.wst.common.modulecore.DeploymentBuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>com.example.docker.build.builder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>org.eclipse.jst.j2ee.web.WebContentBuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>com.openai.eclipse.AIAssistantBuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>com.cicd.workflow.sync.builder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>com.cloudnative.k8s.config.builder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>com.eclipse.future.codereview.AITriggerBuilder</name>
			<arguments/>
		</buildCommand>
		<buildCommand>
			<name>com.eclipse.digitaltwin.envbuilder</name>
			<arguments/>
		</buildCommand>
	</buildSpec>

	<natures>
		<nature>org.eclipse.jdt.core.javanature</nature>
		<nature>org.eclipse.m2e.core.maven2Nature</nature>
		<nature>org.eclipse.wst.common.project.facet.core.nature</nature>
		<nature>org.eclipse.wst.jsdt.core.jsNature</nature>
		<nature>org.eclipse.spring.ide.nature.simple</nature>
		<nature>org.eclipse.egit.core.GitNature</nature>
		<nature>org.eclipse.jdt.apt.core.aptNature</nature>
		<nature>org.eclipse.jem.workbench.JavaEMFNature</nature>
		<nature>org.eclipse.wst.common.modulecore.ModuleCoreNature</nature>
		<nature>org.eclipse.jpt.core.jpanature</nature>
		<nature>org.eclipse.jst.jsf.core.jsfnature</nature>
		<nature>org.eclipse.jst.j2ee.ejb.EJBNature</nature>
		<nature>org.eclipse.jst.ear.EARNature</nature>
		<nature>org.eclipse.jst.jee.server.genericNature</nature>
		<nature>org.eclipse.wst.xml.core.xmlnature</nature>
		<nature>com.openai.eclipse.AIAssistantNature</nature>
		<nature>com.cicd.workflow.pipelineAwareNature</nature>
		<nature>com.kubernetes.eclipse.ClusterAwareNature</nature>
	</natures>
</projectDescription>
